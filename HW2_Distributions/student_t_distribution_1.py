# -*- coding: utf-8 -*-
"""Student_t_distribution_1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IlWBlGT5k1gVxdN_afv9NJYVufq46D5O
"""

import math
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt
from scipy.special import gamma
from scipy.stats import t

degrees = [0.1,1,10,100]
x = np.linspace(-5,5,500)
i = 4
fig,ax = plt.subplots(2,3)
fig.set_size_inches(15,10)
def student_t_dist(degree,x):
    t1 = gamma((degree+1)/2)
    t2 = np.sqrt(np.pi*degree) * gamma(degree/2)
    t3 = 1+(x**2/degree)
    t4 = -(degree+1)/2
    t5 = (t1/t2)*(t3**t4)
    return t5
k = 0
p = 0
for i in range(len(degrees)):
    ax[k][p].plot(student_t_dist(degrees[i],x), label="degree = "+str(degrees[i]))
    ax[k][p].legend()
    if p==2:
       k+=1
       p = 0
    else:
      p+=1
ax[1][1].plot(t(1000000).pdf(x),label="degree = "+str(1000000))
ax[1][1].legend()
x_gaussian = np.random.normal(size=500)
count, bins, ignored = plt.hist(x_gaussian, 30, density=True)
pdf = 1/(np.sqrt(2 * np.pi)) * np.exp(-(bins)**2/2)
ax[1][2].plot(bins, pdf, linewidth=2, color='b', label="Gaussian PDF")
ax[1][2].legend()
plt.show()
fig.savefig("t_dist.png")

count, bins, ignored = plt.hist(x_gaussian, 30, density=True)
pdf = 1/(np.sqrt(2 * np.pi)) * np.exp(-(bins)**2/2)
plt.clf()
plt.plot(bins, pdf, linewidth=2, color='b', label="Gaussian PDF")
plt.legend()
plt.show()
plt.savefig("Gaussain.png")

